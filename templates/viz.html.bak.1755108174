{% extends "base.html" %}
{% block title %}Gasto Público – Seguridad (DIPRES){% endblock %}

{% block head_extra %}
  <script src="https://cdn.plot.ly/plotly-2.29.1.min.js"></script>
  <style>#plot{width:100%;height:520px}</style>
{% endblock %}

{% block content %}
<div class="container py-4">
  <h2 class="h4 fw-bold mb-3">Gasto Público – Seguridad (DIPRES)</h2>

  <div class="row g-3 align-items-end mb-3">
    <div class="col-auto">
      <label class="form-label" for="sel-ds">Dataset:</label>
      <select id="sel-ds" class="form-select">
        <option value="viz_sp_pct_pib_incl_ps.json">Gasto %PIB (incl. PS)</option>
        <option value="viz_sp_pct_pib_excl_ps.json">Gasto %PIB (excl. PS)</option>
        <option value="viz_sp_pct_gt_incl_ps.json">% del Gasto Total (incl. PS)</option>
        <option value="viz_sp_pct_gt_excl_ps.json">% del Gasto Total (excl. PS)</option>
        <option value="viz_sp_pesos22_excl_ps.json">Pesos 2022 (excl. PS)</option>
        <option value="viz_sp_subsec_pct_pib.json">Subsectores % del PIB</option>
        <option value="viz_sp_subsec_pct_gt_sp.json">Subsectores % del gasto en Seguridad</option>
        <option value="viz_sp_subsec_pesos22.json">Subsectores Pesos 2022</option>
      </select>
    </div>
    <div class="col-auto">
      <button id="btn-plot" class="btn btn-primary">Graficar</button>
    </div>
  </div>

  <div id="plot"></div>
  <div id="meta" class="text-muted small mt-2"></div>
</div>
{% endblock %}

{% block scripts_extra %}
<script>
document.addEventListener("DOMContentLoaded", () => {
  const FILES_BASE = "/static/data/";
  const ORDER_FUNC = [
    "Seguridad Pública","Servicios Públicos","Defensa","Vivienda","Cultura",
    "Salud","Educación","Protección Social","Asuntos Económicos","Medioambiente",
    "Seguridad Pública +"
  ];
  const ORDER_SUB = ["Servicios de policía","Tribunales de justicia","Prisiones","Otro"];

  const sel  = document.getElementById("sel-ds");
  const btn  = document.getElementById("btn-plot");
  const meta = document.getElementById("meta");
  const plot = document.getElementById("plot");

  if(!sel || !plot){ console.error("Template sin UI"); return; } // guard-rail

  const humanRange = (arr) => {
    const ys = arr.filter(v => Number.isFinite(v));
    return ys.length ? Math.min(...ys) + "–" + Math.max(...ys) : "—";
  };
  const isPctFile = (name) => /pct_pib|pct_gt|pct_gasto/i.test(name);
  const isSubFile = (name) => /subsec/i.test(name);

  async function draw(){
    const file = sel.value;
    try {
      const res = await fetch(FILES_BASE + file, { cache: "no-store" });
      const data = await res.json();        // JSON estricto (sin NaN)
      if (!Array.isArray(data) || !data.length) {
        Plotly.newPlot(plot, [], {title:"Dataset vacío"}); meta.textContent=""; return;
      }

      const cols = Object.keys(data[0]);
      const yearKey = "Year";
      const series = cols.filter(c => c !== yearKey);

      const ordered = (isSubFile(file) ? ORDER_SUB : ORDER_FUNC)
        .filter(n => series.includes(n))
        .concat(series.filter(s => !ORDER_FUNC.includes(s) && !ORDER_SUB.includes(s)));

      const x = data.map(d => d[yearKey]);
      const traces = ordered.map(name => ({
        x,
        y: data.map(d => (d[name] == null || Number.isNaN(d[name])) ? null : d[name]),
        name,
        mode: "lines+markers",
        type: "scatter",
        connectgaps: false
      }));

      const titleMap = {
        "viz_sp_pct_pib_incl_ps.json":  "Funciones COFOG – % del PIB (incluye PS)",
        "viz_sp_pct_pib_excl_ps.json":  "Funciones COFOG – % del PIB (excluye PS)",
        "viz_sp_pct_gt_incl_ps.json":   "Funciones COFOG – % del Gasto Total (incluye PS)",
        "viz_sp_pct_gt_excl_ps.json":   "Funciones COFOG – % del Gasto Total (excluye PS)",
        "viz_sp_pesos22_excl_ps.json":  "Funciones COFOG – Pesos 2022 (excluye PS)",
        "viz_sp_subsec_pct_pib.json":   "Subsectores de Seguridad – % del PIB",
        "viz_sp_subsec_pct_gt_sp.json": "Subsectores de Seguridad – % del gasto en Seguridad",
        "viz_sp_subsec_pesos22.json":   "Subsectores de Seguridad – Pesos 2022"
      };

      Plotly.newPlot(
        plot, traces,
        {
          title: {text: titleMap[file] || "Gráfico"},
          margin: {t:50, r:10, b:40, l:60},
          xaxis: {title: "Año", tickmode:"linear"},
          yaxis: isPctFile(file)
            ? {title:"Porcentaje", ticksuffix:"%", rangemode:"tozero"}
            : {title:"Pesos 2022", tickformat:"~s", rangemode:"tozero"},
          legend: {orientation:"h", y:-0.2}
        },
        {responsive:true}
      );
      meta.textContent = "Años disponibles en este dataset: " + humanRange(x) + ".";
    } catch (e) {
      console.error("Error cargando dataset:", e);
      Plotly.newPlot(plot, [], {title:"No se pudo leer el dataset."});
      meta.textContent = "";
    }
  }

  btn.addEventListener("click", draw);
  draw();   // primer render al cargar
});
</script>
{% endblock %}
